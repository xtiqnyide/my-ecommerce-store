<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>潮流小店</title>
    <!-- 引入 Tailwind CSS 以便快速构建美观的界面 -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- 引入 Google Fonts 字体 -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* 自定义样式 */
        body {
            font-family: 'Inter', sans-serif;
        }
        .cart-item-enter {
            opacity: 0;
            transform: translateX(100%);
        }
        .cart-item-enter-active {
            opacity: 1;
            transform: translateX(0);
            transition: opacity 300ms, transform 300ms;
        }
        .cart-item-exit {
            opacity: 1;
        }
        .cart-item-exit-active {
            opacity: 0;
            transform: scale(0.9);
            transition: opacity 300ms, transform 300ms;
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">

    <!-- 页面容器 -->
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">

        <!-- 头部导航栏 -->
        <header class="flex justify-between items-center py-6 border-b border-gray-200">
            <h1 class="text-2xl sm:text-3xl font-bold text-gray-900">潮流小店</h1>
            <button id="cart-button" class="relative rounded-full p-2 hover:bg-gray-200 transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
                <span id="cart-count" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center">0</span>
            </button>
        </header>

        <!-- 主内容区域 -->
        <main class="py-12">
            <h2 class="text-2xl font-bold text-center mb-10">我们的商品</h2>
            <!-- 商品列表 -->
            <div id="product-list" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
                <!-- 商品卡片将通过 JS 动态插入到这里 -->
            </div>
        </main>

    </div>

    <!-- 购物车侧边栏 -->
    <div id="cart-sidebar" class="fixed top-0 right-0 h-full w-full sm:w-96 bg-white shadow-2xl transform translate-x-full transition-transform duration-300 ease-in-out z-50 flex flex-col">
        <!-- 购物车头部 -->
        <div class="flex justify-between items-center p-5 border-b">
            <h3 class="text-xl font-semibold">我的购物车</h3>
            <button id="close-cart-button" class="p-2 rounded-full hover:bg-gray-200">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>

        <!-- 购物车商品列表 -->
        <div id="cart-items" class="flex-grow p-5 overflow-y-auto">
            <!-- 购物车内容将通过 JS 动态插入 -->
            <div id="empty-cart-message" class="text-center text-gray-500 mt-10">购物车是空的</div>
        </div>
        
        <!-- 购物车底部 -->
        <div class="p-5 border-t bg-gray-50">
            <div class="flex justify-between items-center font-bold text-lg mb-4">
                <span>总计</span>
                <span id="cart-total">¥0.00</span>
            </div>
            <button class="w-full bg-indigo-600 text-white py-3 rounded-lg font-semibold hover:bg-indigo-700 transition-all disabled:bg-gray-400" id="checkout-button" disabled>
                去结算
            </button>
        </div>
    </div>
    
    <!-- 遮罩层 -->
    <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 hidden z-40"></div>


    <script>
        // --- 数据 ---
        // 商品数据
        const products = [
            {
                id: 1,
                name: '简约设计T恤',
                price: 129.00,
                image: 'https://placehold.co/400x400/F3F4F6/333333?text=T-Shirt'
            },
            {
                id: 2,
                name: '舒适牛仔裤',
                price: 349.00,
                image: 'https://placehold.co/400x400/E5E7EB/333333?text=Jeans'
            },
            {
                id: 3,
                name: '经典款运动鞋',
                price: 499.00,
                image: 'https://placehold.co/400x400/D1D5DB/333333?text=Sneakers'
            },
            {
                id: 4,
                name: '时尚双肩包',
                price: 259.00,
                image: 'https://placehold.co/400x400/9CA3AF/333333?text=Backpack'
            },
        ];

        // 购物车数据
        let cart = [];

        // --- DOM 元素 ---
        const productList = document.getElementById('product-list');
        const cartButton = document.getElementById('cart-button');
        const closeCartButton = document.getElementById('close-cart-button');
        const cartSidebar = document.getElementById('cart-sidebar');
        const overlay = document.getElementById('overlay');
        const cartCount = document.getElementById('cart-count');
        const cartItemsContainer = document.getElementById('cart-items');
        const emptyCartMessage = document.getElementById('empty-cart-message');
        const cartTotal = document.getElementById('cart-total');
        const checkoutButton = document.getElementById('checkout-button');
        
        // --- 功能函数 ---

        /**
         * 渲染商品列表
         */
        function renderProducts() {
            products.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'bg-white rounded-lg shadow-md overflow-hidden transform hover:-translate-y-1 transition-all duration-300';
                productCard.innerHTML = `
                    <img src="${product.image}" alt="${product.name}" class="w-full h-56 object-cover">
                    <div class="p-5">
                        <h3 class="text-lg font-semibold text-gray-800">${product.name}</h3>
                        <p class="text-xl font-bold text-indigo-600 mt-2">¥${product.price.toFixed(2)}</p>
                        <button data-id="${product.id}" class="add-to-cart-btn mt-4 w-full bg-gray-800 text-white py-2 rounded-lg font-semibold hover:bg-gray-900 transition-colors">
                            加入购物车
                        </button>
                    </div>
                `;
                productList.appendChild(productCard);
            });
        }

        /**
         * 添加商品到购物车
         * @param {number} productId 商品ID
         */
        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            const cartItem = cart.find(item => item.id === productId);

            if (cartItem) {
                cartItem.quantity++;
            } else {
                cart.push({ ...product, quantity: 1 });
            }
            updateCart();
        }

        /**
         * 从购物车移除商品
         * @param {number} productId 商品ID
         */
        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            updateCart();
        }
        
        /**
         * 更新购物车显示和总价
         */
        function updateCart() {
            renderCartItems();
            updateCartCount();
            updateCartTotal();
            
            // 保存购物车到 localStorage
            localStorage.setItem('shoppingCart', JSON.stringify(cart));
        }
        
        /**
         * 渲染购物车内的商品
         */
        function renderCartItems() {
            cartItemsContainer.innerHTML = ''; // 清空现有内容

            if (cart.length === 0) {
                cartItemsContainer.appendChild(emptyCartMessage);
                emptyCartMessage.style.display = 'block';
                checkoutButton.disabled = true;
            } else {
                emptyCartMessage.style.display = 'none';
                checkoutButton.disabled = false;
                cart.forEach(item => {
                    const cartItemElement = document.createElement('div');
                    cartItemElement.className = 'flex justify-between items-center mb-4 p-2 bg-gray-50 rounded-lg';
                    cartItemElement.innerHTML = `
                        <div class="flex items-center">
                            <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded-md mr-4">
                            <div>
                                <h4 class="font-semibold">${item.name}</h4>
                                <p class="text-gray-600">¥${item.price.toFixed(2)} x ${item.quantity}</p>
                            </div>
                        </div>
                        <button data-id="${item.id}" class="remove-from-cart-btn text-red-500 hover:text-red-700 p-1 rounded-full">
                           <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                              <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm4 0a1 1 0 012 0v6a1 1 0 11-2 0V8z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    `;
                    cartItemsContainer.appendChild(cartItemElement);
                });
            }
        }

        /**
         * 更新购物车图标上的数量
         */
        function updateCartCount() {
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            cartCount.textContent = totalItems;
        }

        /**
         * 更新购物车总价
         */
        function updateCartTotal() {
            const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
            cartTotal.textContent = `¥${total.toFixed(2)}`;
        }

        /**
         * 打开购物车侧边栏
         */
        function openCart() {
            cartSidebar.classList.remove('translate-x-full');
            overlay.classList.remove('hidden');
            document.body.style.overflow = 'hidden'; // 禁止背景滚动
        }

        /**
         * 关闭购物车侧边栏
         */
        function closeCart() {
            cartSidebar.classList.add('translate-x-full');
            overlay.classList.add('hidden');
            document.body.style.overflow = ''; // 恢复背景滚动
        }
        
        /**
         * 从 localStorage 加载购物车
         */
        function loadCartFromStorage() {
            const storedCart = localStorage.getItem('shoppingCart');
            if(storedCart) {
                cart = JSON.parse(storedCart);
                updateCart();
            }
        }


        // --- 事件监听 ---
        
        // 页面加载完成时
        document.addEventListener('DOMContentLoaded', () => {
            renderProducts();
            loadCartFromStorage();
        });

        // 点击 "加入购物车" 按钮
        productList.addEventListener('click', e => {
            if (e.target.classList.contains('add-to-cart-btn')) {
                const productId = parseInt(e.target.getAttribute('data-id'));
                addToCart(productId);
            }
        });

        // 打开购物车
        cartButton.addEventListener('click', openCart);

        // 关闭购物车
        closeCartButton.addEventListener('click', closeCart);
        overlay.addEventListener('click', closeCart);

        // 点击 "移除" 按钮
        cartItemsContainer.addEventListener('click', e => {
             // 我们需要向上查找父元素来找到按钮
            const removeButton = e.target.closest('.remove-from-cart-btn');
            if (removeButton) {
                const productId = parseInt(removeButton.getAttribute('data-id'));
                removeFromCart(productId);
            }
        });

        // 结算按钮 (这里只做演示)
        checkoutButton.addEventListener('click', () => {
            if(cart.length > 0) {
                 alert('感谢您的购买！结算功能正在开发中。');
                 cart = []; // 清空购物车
                 updateCart();
                 closeCart();
            }
        });

    </script>
</body>
</html>
